name: Rust CI and Documentation

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test (stable)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --verbose
      - run: cargo test --verbose

  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all --check

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [test, fmt]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: "latest"

      - name: Build mdBook
        run: |
          # Check if 'book' directory exists
          if [ -d "book" ]; then
            mdbook build book
            echo "Using 'book' directory"
            echo "PUBLISH_DIR=./book/book" >> $GITHUB_ENV
          # Check if 'docs' directory exists
          elif [ -d "docs" ]; then
            mdbook build docs
            echo "Using 'docs' directory"
            echo "PUBLISH_DIR=./docs/book" >> $GITHUB_ENV
          # Check if 'user_guide' directory exists
          elif [ -d "user_guide" ]; then
            mdbook build user_guide
            echo "Using 'user_guide' directory"
            echo "PUBLISH_DIR=./user_guide/book" >> $GITHUB_ENV
          else
            echo "ERROR: Could not find mdBook directory"
            exit 1
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./book

  publish-crate:
    name: Publish Crate
    runs-on: ubuntu-latest
    needs: [test, fmt]
    # Only run this job when explicitly triggered for a release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Publish to crates.io
        run: cargo publish --token ${CRATE_TOKEN}
        env:
          CRATE_TOKEN: ${{ secrets.CRATE_TOKEN }}
